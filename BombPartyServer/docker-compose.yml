services:
  postgres:
    image: postgres:17
    container_name: bombserver
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root123
      POSTGRES_DB: BombPartyServer
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - appnet

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    env_file:
      - .env.docker
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    volumes:
      - ./backend:/usr/src/app/backend
      - ./prisma:/usr/src/app/prisma
      - ./.env.docker:/usr/src/app/.env.docker
      - /usr/src/app/node_modules # <-- mantém node_modules no container
    networks:
      - appnet
    command: sh -c "npx prisma generate && npm run dev"

  backend2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend2
    env_file:
      - .env.docker
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    volumes:
      - ./backend:/usr/src/app/backend
      - ./prisma:/usr/src/app/prisma
      - ./.env.docker:/usr/src/app/.env.docker
      - /usr/src/app/node_modules # <-- mantém node_modules no container
    networks:
      - appnet
    command: sh -c "npx prisma generate && npm run dev"

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - backend
      - backend2
    networks:
      - appnet

volumes:
  postgres_data:

networks:
  appnet:
    driver: bridge
