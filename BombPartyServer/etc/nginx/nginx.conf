user nginx;
worker_processes auto;
worker_rlimit_nofile 100000;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    ##
    # GERAL
    ##
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # LOGS
    ##
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log warn;

    ##
    # GZIP COMPRESSION
    ##
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # PROXY BUFFER SETTINGS
    ##
    proxy_buffering on;
    proxy_buffer_size 8k;
    proxy_buffers 2048 8k;
    proxy_busy_buffers_size 16k;
    proxy_max_temp_file_size 0;

    ##
    # TIMEOUTS
    ##
    proxy_connect_timeout       60;
    proxy_send_timeout          60;
    proxy_read_timeout          60;
    send_timeout                60;

    ##
    # UPSTREAM BACKEND SERVERS (Load Balancing)
    ##
    upstream backend_servers {
        server backend:8080;     # container backend (docker)
        server backend2:8081;  # add more servers se quiser balanceamento
        keepalive 64;
    }

    ##
    # SERVER CONFIG
    ##
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # return 301 https://$host$request_uri;

        ##
        # SECURITY HEADERS
        ##
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "no-referrer-when-downgrade";
        add_header Content-Security-Policy "default-src 'self';";

        ##
        # PROXY PARA O BACKEND NODE
        ##
        location / {
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
