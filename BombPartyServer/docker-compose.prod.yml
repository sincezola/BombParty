services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    env_file:
      - .env.prod
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/usr/src/app/backend
      - ./prisma:/usr/src/app/prisma
      - ./.env.prod:/usr/src/app/.env.prod
      - /usr/src/app/node_modules # <-- mantém node_modules no container
    networks:
      - appnet
    command: sh -c "npx prisma generate && npm run dev"

  backend2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend2
    env_file:
      - .env.prod
    ports:
      - "8081:8081"
    volumes:
      - ./backend:/usr/src/app/backend
      - ./prisma:/usr/src/app/prisma
      - ./.env.prod:/usr/src/app/.env.prod
      - /usr/src/app/node_modules # <-- mantém node_modules no container
    networks:
      - appnet
    command: sh -c "npx prisma generate && npm run dev"

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - backend
      - backend2
    networks:
      - appnet

volumes:
  postgres_data:

networks:
  appnet:
    driver: bridge
