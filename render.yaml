services:
  - type: web
    name: backend
    env: docker
    dockerfilePath: ./Dockerfile
    dockerContext: .
    ports:
      - containerPort: 8080
    buildCommand: ""
    startCommand: 'sh -c "npx prisma generate && npm run dev"'
    volumes:
      - type: bind
        source: ./backend
        target: /usr/src/app/backend
      - type: bind
        source: ./prisma
        target: /usr/src/app/prisma
      - type: bind
        source: ./.env.docker
        target: /usr/src/app/.env.docker
      - type: volume
        source: node_modules_volume
        target: /usr/src/app/node_modules
    network:
      name: appnet

  - type: web
    name: backend2
    env: docker
    dockerfilePath: ./Dockerfile
    dockerContext: .
    ports:
      - containerPort: 8081
    buildCommand: ""
    startCommand: 'sh -c "npx prisma generate && npm run dev"'
    volumes:
      - type: bind
        source: ./backend
        target: /usr/src/app/backend
      - type: bind
        source: ./prisma
        target: /usr/src/app/prisma
      - type: bind
        source: ./.env.docker
        target: /usr/src/app/.env.docker
      - type: volume
        source: node_modules_volume
        target: /usr/src/app/node_modules
    network:
      name: appnet

  - type: web
    name: nginx
    env: docker
    image: nginx:latest
    ports:
      - containerPort: 80
    buildCommand: ""
    startCommand: ""
    volumes:
      - type: bind
        source: ./etc/nginx/nginx.conf
        target: /etc/nginx/nginx.conf
    dependsOn:
      - backend
      - backend2
    network:
      name: appnet

networks:
  - name: appnet
    driver: bridge

volumes:
  - name: node_modules_volume
